<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[ブログ]]></description><link>https://ajfafg.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 20 Aug 2022 17:30:55 GMT</lastBuildDate><item><title><![CDATA[ゆめみ フロントエンド 1day インターンに参加しました]]></title><description><![CDATA[ゆめみ フロントエンド 1day インターンに参加しました．ク s……伸び代しかないコードをモブプログラミングの形式でリファクタリングするという内容でした． 成果物はこちらのリポジトリのブランチで公開されています． 諸情報 選考内容 React…]]></description><link>https://ajfafg.github.io/yumemi-frontend-1day-2022/</link><guid isPermaLink="false">https://ajfafg.github.io/yumemi-frontend-1day-2022/</guid><pubDate>Sat, 20 Aug 2022 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://talent.supporterz.jp/events/7932c2f1-254c-4b19-b201-9cd2d216b2bf/&quot;&gt;ゆめみ フロントエンド 1day インターン&lt;/a&gt;に参加しました．ク s……伸び代しかないコードをモブプログラミングの形式でリファクタリングするという内容でした．&lt;/p&gt;
&lt;p&gt;成果物は&lt;a href=&quot;https://github.com/yumemi-inc/frontend-1day-curriculum/tree/intern_20220820_team6&quot;&gt;こちらのリポジトリのブランチ&lt;/a&gt;で公開されています．&lt;/p&gt;
&lt;h2&gt;諸情報&lt;/h2&gt;
&lt;h3&gt;選考内容&lt;/h3&gt;
&lt;p&gt;React ベースの作品を公開する GitHub リポジトリを用いて選考が行われました．倍率は約２倍だったみたいです．&lt;/p&gt;
&lt;p&gt;ちなみに，僕が提出した作品は&lt;a href=&quot;https://github.com/ajfAfg/emojion&quot;&gt;これ&lt;/a&gt;．&lt;/p&gt;
&lt;h3&gt;参加人数とかチーム分け&lt;/h3&gt;
&lt;p&gt;インターン生は 11 名で，ゆめみさんのエンジニアは 8 名でした．モブプロのチームの数は 6 つで，チーム構成はゆめみさんのエンジニア 1 名とインターン生 2 名でした（1 チームだけ，ゆめみさんのエンジニア 2 名とインターン生 1 名でした）．&lt;/p&gt;
&lt;h3&gt;インターンの流れ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;インターンの説明・自己紹介&lt;/li&gt;
&lt;li&gt;モブプロする&lt;/li&gt;
&lt;li&gt;成果発表&lt;/li&gt;
&lt;li&gt;チームごとに振り返り&lt;/li&gt;
&lt;li&gt;クロージング&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;という感じでした．詳細は&lt;a href=&quot;https://github.com/yumemi-inc/frontend-1day-curriculum/blob/main/docs/20220820/%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%B9%E3%82%B1%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB.md&quot;&gt;こちら&lt;/a&gt;．&lt;/p&gt;
&lt;h2&gt;参加した動機&lt;/h2&gt;
&lt;p&gt;楽しそうだったから．&lt;/p&gt;
&lt;p&gt;いや，ホントこれだけの動機で参加しました．なんか友達と遊ぶ約束をするみたいな．そんな感じです．&lt;/p&gt;
&lt;h2&gt;伸び代の例&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pref&lt;/code&gt; のように &lt;code class=&quot;language-text&quot;&gt;prefecture&lt;/code&gt; が省略されているといった小さな伸び代から，異なる 2 つの状態を一度に更新する関数といった伸び代が大きすぎてもはや人生のようなものまで幅広くありました．前者の伸び代は一括で置換したりすればよいのですが，後者は設計レベルから手を入れる必要があり，なかなか手強かったです．&lt;/p&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;やめ太郎さんは実在した&lt;/strong&gt;．&lt;a href=&quot;https://qiita.com/Yametaro&quot;&gt;Qiita&lt;/a&gt; や &lt;a href=&quot;https://twitter.com/yametaro1983&quot;&gt;Twitter&lt;/a&gt; 上で存在を確認していたやめ太郎さんですが，今回たまたま交流することができ，実在していることが確認できました．しかもチームまで同じだったので，結構たくさんお話しできました．楽しかった！　最初やめ太郎さんとお話しするときに若干緊張してたのは内緒．&lt;/p&gt;
&lt;p&gt;真面目な感想は大体&lt;a href=&quot;https://github.com/yumemi-inc/frontend-1day-curriculum/blob/intern_20220820_team6/show.md&quot;&gt;ここ&lt;/a&gt;に書いているのですが，抜粋して書くと，やっぱり初めてのモブプログラミングが楽しかったです．純粋に友達と一緒にゲームをしているような楽しさがありますし，常にレビューをしている状態なため同期のコストが発生しないなどのよく言われているモブプロのメリットも実感できました．ただ，シャイな僕は自分の操作を見られることにまだ少し抵抗感があるので，ここは場数を踏んで慣れていくしかないのかなと思います．&lt;/p&gt;
&lt;p&gt;他にも，設計としてあるべき姿（通信のキャッシュは通信の裏側で行われるべき，など）を意識して改善方法を考え，それが評価されたことが純粋に嬉しかったです（コードまでは落とし込めませんでしたが）．ハッカソンや研究では評価されづらい設計ですが，これまで好きで勉強していて良かったなーと思います．&lt;/p&gt;
&lt;p&gt;最後に，ゆめみさんの方々の雰囲気がめちゃくちゃいいなーと改めて感じました．ゆめみさんでは社内の心理的安全性を高める活動を積極的にされているそうなのですが（&lt;a href=&quot;https://fukabori.fm/episode/45&quot;&gt;参考&lt;/a&gt;），この雰囲気の良さはその活動の賜物なのだと勝手に思ってます．あと，全員芸人さんやってるんかなってくらい面白い．今度こっそりお笑いの秘訣教えてくださいね．&lt;/p&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;p&gt;伸び代という言葉が好きになったインターンでした！　今回のインターンに申し込んでから伸び代というワードが口癖になった感もあるくらい．これからもどんどん伸び代を改善していくぞー！！&lt;/p&gt;</content:encoded></item><item><title><![CDATA[技育CAMPハッカソン vol.7 に参加しました]]></title><description><![CDATA[技育 CAMP ハッカソン vol.7に参加しました．前回から約 1 ヶ月ぶりの参加です．今回は個人での参加だったので，チーム名が二人ユニットから一人ユニットに退化してしまいました．かなしみ． とりあえず成果物の発表スライド． パンチカードを作りました！！！　Visual…]]></description><link>https://ajfafg.github.io/giiku-camp-vol7-2022/</link><guid isPermaLink="false">https://ajfafg.github.io/giiku-camp-vol7-2022/</guid><pubDate>Mon, 15 Aug 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://talent.supporterz.jp/events/3207890b-4b45-46f6-881b-e761a919cbe1/&quot;&gt;技育 CAMP ハッカソン vol.7&lt;/a&gt;に参加しました．&lt;a href=&quot;../giiku-camp-vol5-2022&quot;&gt;前回&lt;/a&gt;から約 1 ヶ月ぶりの参加です．今回は個人での参加だったので，チーム名が二人ユニットから一人ユニットに退化してしまいました．かなしみ．&lt;/p&gt;
&lt;p&gt;とりあえず成果物の発表スライド．&lt;/p&gt;
&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom: 59.27083333333333%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem&quot; &gt; &lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vRUZaL9QFT-tDAP4fqaN_OGuckstUbYwyJhPw0mwrVSHZgaKR8iauKAD6S385s15vyYAUWRybojNPgo/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; style=&quot; position: absolute; top: 0; left: 0; width: 100%; height: 100%; &quot;&gt;&lt;/iframe&gt; &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;パンチカード&lt;/strong&gt;を作りました！！！　&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ajfAfg.punched-card&quot;&gt;Visual Studio マーケットプレイス&lt;/a&gt;にて公開中なのでぜひ遊んでみてください！&lt;/p&gt;
&lt;p&gt;また，今回は&lt;a href=&quot;https://twitter.com/geek_pjt/status/1556208824687947776?s=21&amp;#x26;t=hvh0cHoG8oOvWvENKLaToQ&quot;&gt;優秀賞&lt;/a&gt;をいただきました！　ありがとうございます！！&lt;/p&gt;
&lt;h2&gt;仕様&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;文字コードは ASCII コード&lt;/li&gt;
&lt;li&gt;1 カラム 1 文字&lt;/li&gt;
&lt;li&gt;40 字/枚&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;間違った箇所に穴を開けるともう戻せないのも仕様です（VSCode の Undo を使えば一応戻せる）．&lt;/p&gt;
&lt;h2&gt;動機&lt;/h2&gt;
&lt;p&gt;ウケ狙いです．&lt;/p&gt;
&lt;p&gt;もう少し真面目に書くと，テーマとして無駄開発を選択したのは，これまで比較的真面目に作品を作ってきてて，そろそろふざけたかったからです．パンチカードというアイデアを採用したのは，プログラミング言語自体が好きなので，プログラミング言語と関連したアイデアで何か作りたかったからです．&lt;/p&gt;
&lt;h3&gt;なんで VSCode の拡張機能として作ったの&lt;/h3&gt;
&lt;p&gt;最初は Jupyter Notebook のような形で実装し，ブラウザで動かすことを考えていました．しかし，特にファイルの同期を考え出すと結構しんどかったので，その辺りの面倒を見てくれる VSCode 上で動かすことにしました．VSCode の拡張機能だと本アプリを手元でお試ししやすいだろう，みたいな期待も少しあります．&lt;/p&gt;
&lt;h2&gt;技術的な話&lt;/h2&gt;
&lt;p&gt;今回のハッカソンで挑戦したことは，スライドにも書いた以下の 2 つです．&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;VSCode の拡張機能の開発&lt;/li&gt;
&lt;li&gt;拡張機能の中で React を動かす&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ここでは 2 を少し深掘ってみます．&lt;/p&gt;
&lt;h3&gt;Custom Editor&lt;/h3&gt;
&lt;p&gt;VSCode の拡張機能を作るための API がいくつか提供されているのですが，今回作ったものは主に &lt;a href=&quot;https://code.visualstudio.com/api/extension-guides/custom-editors&quot;&gt;Custom Editor API&lt;/a&gt; を使っています．Custom Editor API を使うことで，VSCode の中にもう一つのファイル編集ソフトを立ち上げるみたいなことができます．例えば，&lt;a href=&quot;https://github.com/microsoft/vscode-extension-samples/tree/main/custom-editor-sample&quot;&gt;このサンプル&lt;/a&gt;のように，画像に落書きする画面を作ったりできます．なお，この画面は HTML/CSS/JavaScript で作ります（詳細は &lt;a href=&quot;https://code.visualstudio.com/api/extension-guides/webview#scripts-and-message-passing&quot;&gt;Webview API&lt;/a&gt;）．拡張機能もまた JavaScript で記述されます．&lt;/p&gt;
&lt;h3&gt;直接 DOM を触りとうない&lt;/h3&gt;
&lt;p&gt;画面を HTML/CSS/JavaScript で作るということで，動的に画面を変更する場合は DOM をイジる必要があるのですが，React を知ってしまった今ではとてもそんなことできません．バグらせる自信しかない（React を使ってもバグらせるけど）．&lt;/p&gt;
&lt;p&gt;という訳で VSCode の中でも React を動かしたいんですが，ビルドに少し難があります．というのも，全ての JavaScript ファイルを一つにまとめられないという問題があります．この理由は，拡張機能用の JavaScript ファイルが実行されたのちに，画面用の JavaScript ファイルが読み込まれる必要があるからです．以上から拡張機能用と画面用でそれぞれ分けてビルドする必要があり，Webpack の設定を頑張ってなんとかしました．一時沼りかけてたのでマジでなんとかなってよかった……&lt;/p&gt;
&lt;h2&gt;Future Work&lt;/h2&gt;
&lt;p&gt;アイデアが結構気に入っているので，細かい部分を改善してきたいと考えています．例えば，今は本拡張機能をインストールしていると全ファイルが問答無用でパンチカード化されるというなかなか治安の悪い挙動をしているので，コマンドを実行した時などの特定のタイミングでのみパンチカード化したいです．&lt;/p&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;p&gt;出オチ感満載の無駄作品を作れてとても満足です．「めちゃくちゃ無駄だね〜」と言われた時はもうすごい嬉しかったです．無駄開発最高！&lt;/p&gt;
&lt;p&gt;でも裏目標の「最優秀賞を取る」が達成できなかったのは悔しいです．もっと精進せねば．夏の間で力をつけて次回こそは！&lt;/p&gt;</content:encoded></item><item><title><![CDATA[技育CAMPハッカソン vol.5 に参加しました]]></title><description><![CDATA[技育 CAMP ハッカソンの参加は今回で…]]></description><link>https://ajfafg.github.io/giiku-camp-vol5-2022/</link><guid isPermaLink="false">https://ajfafg.github.io/giiku-camp-vol5-2022/</guid><pubDate>Tue, 12 Jul 2022 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;技育 CAMP ハッカソンの参加は今回で 2 回目となります&lt;sup id=&quot;fnref-1&quot;&gt;&lt;a href=&quot;#fn-1&quot; class=&quot;footnote-ref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;．前回は一人での参加でしたが，今回は研究室の先輩と二人での参加でした．おかげさまで，前回の「一人ユニット」というチーム名から「二人ユニット」という名前に昇格できて良かったです．&lt;/p&gt;
&lt;p&gt;何はともあれ，まずは成果物の発表スライドです．&lt;/p&gt;
&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom: 59.27083333333333%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem&quot; &gt; &lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vThohr7TaWkSfmE0Fkqj9DVIBzGli7eFANHvUhdbsZNlsCVlbNTSGY9Uq8Ox64TqnaePWMarnbedali/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; style=&quot; position: absolute; top: 0; left: 0; width: 100%; height: 100%; &quot;&gt;&lt;/iframe&gt; &lt;/div&gt;
&lt;p&gt;……完成しませんでした！&lt;/p&gt;
&lt;p style=&quot;text-align:right&quot;&gt;&lt;b&gt;終&lt;/b&gt;&lt;/p&gt;
&lt;h2&gt;弁明したい&lt;/h2&gt;
&lt;p&gt;初の参加記を終える前に，何が難しかったのか少し説明させてください！　なお，僕は Web フロントエンドの担当だったので，そちらの視点での難しさとなります．&lt;/p&gt;
&lt;h3&gt;GraphQL を用いたイケイケな開発方法がよくわからない問題&lt;/h3&gt;
&lt;p&gt;ここでイケイケとは，クエリの記述時に自動補完が効き，そのクエリから型が自動生成でき，宣言的でかつ型安全に GraphQL で通信できることを指しています．何だか色んな条件が含まれていますが，ここの問題はこれらの条件を満たすためには選定すべき技術が多いといったものになります．&lt;/p&gt;
&lt;p&gt;ここで言ってる内容を要約すると「初めて触る技術は考えることが多くて大変」となるので GraphQL に限った話じゃないやろって感じなんですが，まぁイケイケな開発方法を追い求めていたら時間が溶けていたという話です．ウワー！&lt;/p&gt;
&lt;h3&gt;GraphQL のモックが期待通りに動いてくれない問題&lt;/h3&gt;
&lt;p&gt;GraphQL のモックライブラリとして &lt;a href=&quot;https://github.com/mswjs/msw&quot;&gt;MSW&lt;/a&gt; を利用していたのですが，期待通りに動いてくれなくて困っていました．Next.js を使っているために MSW が動くべき環境がブラウザとサーバで 2 つあり，どちらの環境でも動くような設定にできていなかった説が濃厚ですが，結局解決できずただ時間が消費されただけでした．ウワー！&lt;/p&gt;
&lt;h3&gt;睡眠が足りていない問題&lt;/h3&gt;
&lt;p&gt;致命的です．睡眠が足りていないと判断を誤ります．特にマズかったのが，Next.js で作っていたアプリを通常の React で作り直し始めたことです．当時起こっていた問題は，そのアプリを Amplify にデプロイすると ISR するページが 503 となる，というものでした．これではマズいので対処しなきゃなんですが，その対処法が最悪ですね．&lt;a href=&quot;https://zenn.dev/eringiv3/articles/5fa044cc92c3a3&quot;&gt;この記事&lt;/a&gt;によると今回問題になっていたのは ISR なので，最初から作り直すのではなく SSR にするだけで対処できたはずです．ウ，ウワー！！&lt;/p&gt;
&lt;p&gt;↓ これは今回のハッカソンの一番の成果&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;今回のハッカソンの1番の成果、研究室でいつでもわかんないっピができるようになったこと &lt;a href=&quot;https://t.co/E8R9P09HlE&quot;&gt;pic.twitter.com/E8R9P09HlE&lt;/a&gt;&lt;/p&gt;&amp;mdash; Show(暫定) (@ajfAfg) &lt;a href=&quot;https://twitter.com/ajfAfg/status/1546073798008483840?ref_src=twsrc%5Etfw&quot;&gt;July 10, 2022&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;h2&gt;時をかけられるのなら&lt;/h2&gt;
&lt;p&gt;最初から通常の React で作りたいです．僕がまだ Next.js を理解できていないことが原因ではあるのですが，プログラムがどの環境で実行されるのか意識しながらコードを書くのは難しいです．最初から通常の React で作っていたら，モックや 503 の問題を始めとする多くの問題に苦しまなくても良かったです．多分．&lt;/p&gt;
&lt;p&gt;あと，挑戦する技術を GraphQL に絞っていたらよかったです．流石に詰め込みすぎた．ISR や DDD 難しかったです．&lt;/p&gt;
&lt;h2&gt;それでも楽しいハッカソン&lt;/h2&gt;
&lt;p&gt;今回は大分しんどさの方が勝っていたけれども，やっぱり楽しかったです．大勢でわいわい開発するあの雰囲気が好きだし，すごい人ばかりで刺激されまくりです．また来月あたりに参加したいな．&lt;/p&gt;
&lt;!-- ## まとめ

GraphQL かなり面白かったので，今後も使っていきたいです．今回は GraphQL のクライアントとして [Apollo Client](https://github.com/apollographql/apollo-client) を使ったけど，次は [Relay](https://github.com/facebook/relay) や [urql](https://github.com/FormidableLabs/urql) も使ってみたい．サーバも書きたい！ --&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&quot;fn-1&quot;&gt;&lt;a href=&quot;https://github.com/ajfAfg/emojion&quot;&gt;前回の成果物&lt;/a&gt;&lt;a href=&quot;#fnref-1&quot; class=&quot;footnote-backref&quot;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Hello World!]]></title><description><![CDATA[個人ブログを立ち上げてみました．技術的な記事は今後も Zenn に投稿する予定ですが，パーソナルな内容だったりジョークがすぎるような記事はこちらに投稿しようと考えています． 早くハッカソンの参加記を書きたかったので今（2022-07-1…]]></description><link>https://ajfafg.github.io/hello-world/</link><guid isPermaLink="false">https://ajfafg.github.io/hello-world/</guid><pubDate>Tue, 12 Jul 2022 17:00:00 GMT</pubDate><content:encoded>&lt;p&gt;個人ブログを立ち上げてみました．技術的な記事は今後も &lt;a href=&quot;https://zenn.dev/arjef&quot;&gt;Zenn&lt;/a&gt; に投稿する予定ですが，パーソナルな内容だったりジョークがすぎるような記事はこちらに投稿しようと考えています．&lt;/p&gt;
&lt;p&gt;早くハッカソンの参加記を書きたかったので今（2022-07-12）はテンプレートをそのまま使っていていますが，盆栽は今後じっくりとやっていきます．&lt;/p&gt;</content:encoded></item></channel></rss>